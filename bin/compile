#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
envdir=$(cd "$3/" && pwd)
buildpack=$(dirname $(dirname $0))

arch=$(uname -m|tr A-Z a-z)
if test $arch = x86_64
then arch=amd64
fi
plat=$(uname|tr A-Z a-z)-$arch

# Python
# Virtualenv is needed to copy goose to the build bin folder
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$buildpack/$plat/bin:$venv/bin:$PATH

virtualenv() {
    python "$buildpack/thirdparty/virtualenv-1.11.6/virtualenv.py" "$@"
}

echo "-----> precompiling assets ..."

if [ -d "$envdir" ]; then
    for f in $envdir/*
    do
        export `basename $f`=`cat $f`
    done
fi

if [ -e "$envdir/GULPFILE" ]; then
    echo "Alternate gulpfile located"
    GULPFILE=$(cat $envdir/GULPFILE)
fi

echo "-----> installing super-front node modules ..."
# cd $build/app/assets/super-front // TODO
# npm install  // TODO

cd $build
# echo "-----> using gulpfile ${GULPFILE:-gulpfile.js} ..." // TODO
# gulp --gulpfile ${GULPFILE:-gulpfile.js} assets:copy 2>&1 // TODO

echo "About to make bin directory in build"
mkdir -p $build/bin
echo "About to copy goose to bin directory in build"
cp `which goose` $build/bin
